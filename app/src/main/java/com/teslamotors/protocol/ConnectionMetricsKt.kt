// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializeconnectionMetrics")
public inline fun connectionMetrics(block: com.teslamotors.protocol.ConnectionMetricsKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.ConnectionMetrics =
  com.teslamotors.protocol.ConnectionMetricsKt.Dsl._create(com.teslamotors.protocol.VCSEC.ConnectionMetrics.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.ConnectionMetrics`
 */
public object ConnectionMetricsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.ConnectionMetrics.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.ConnectionMetrics.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.ConnectionMetrics = _builder.build()

    /**
     * `uint32 goodConnEventCount = 1;`
     */
    public var goodConnEventCount: kotlin.Int
      @JvmName("getGoodConnEventCount")
      get() = _builder.getGoodConnEventCount()
      @JvmName("setGoodConnEventCount")
      set(value) {
        _builder.setGoodConnEventCount(value)
      }
    /**
     * `uint32 goodConnEventCount = 1;`
     */
    public fun clearGoodConnEventCount() {
      _builder.clearGoodConnEventCount()
    }

    /**
     * `uint32 missedConnEventCount = 2;`
     */
    public var missedConnEventCount: kotlin.Int
      @JvmName("getMissedConnEventCount")
      get() = _builder.getMissedConnEventCount()
      @JvmName("setMissedConnEventCount")
      set(value) {
        _builder.setMissedConnEventCount(value)
      }
    /**
     * `uint32 missedConnEventCount = 2;`
     */
    public fun clearMissedConnEventCount() {
      _builder.clearMissedConnEventCount()
    }

    /**
     * `uint32 badCRCConnEventCount = 3;`
     */
    public var badCRCConnEventCount: kotlin.Int
      @JvmName("getBadCRCConnEventCount")
      get() = _builder.getBadCRCConnEventCount()
      @JvmName("setBadCRCConnEventCount")
      set(value) {
        _builder.setBadCRCConnEventCount(value)
      }
    /**
     * `uint32 badCRCConnEventCount = 3;`
     */
    public fun clearBadCRCConnEventCount() {
      _builder.clearBadCRCConnEventCount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.ConnectionMetrics.copy(block: com.teslamotors.protocol.ConnectionMetricsKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.ConnectionMetrics =
  com.teslamotors.protocol.ConnectionMetricsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

