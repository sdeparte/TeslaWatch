// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializecapabilities")
public inline fun capabilities(block: com.teslamotors.protocol.CapabilitiesKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.Capabilities =
  com.teslamotors.protocol.CapabilitiesKt.Dsl._create(com.teslamotors.protocol.VCSEC.Capabilities.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.Capabilities`
 */
public object CapabilitiesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.Capabilities.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.Capabilities.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.Capabilities = _builder.build()

    /**
     * `bool chargePortOpen = 1;`
     */
    public var chargePortOpen: kotlin.Boolean
      @JvmName("getChargePortOpen")
      get() = _builder.getChargePortOpen()
      @JvmName("setChargePortOpen")
      set(value) {
        _builder.setChargePortOpen(value)
      }
    /**
     * `bool chargePortOpen = 1;`
     */
    public fun clearChargePortOpen() {
      _builder.clearChargePortOpen()
    }

    /**
     * `bool chargePortClose = 2;`
     */
    public var chargePortClose: kotlin.Boolean
      @JvmName("getChargePortClose")
      get() = _builder.getChargePortClose()
      @JvmName("setChargePortClose")
      set(value) {
        _builder.setChargePortClose(value)
      }
    /**
     * `bool chargePortClose = 2;`
     */
    public fun clearChargePortClose() {
      _builder.clearChargePortClose()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.Capabilities.copy(block: com.teslamotors.protocol.CapabilitiesKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.Capabilities =
  com.teslamotors.protocol.CapabilitiesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

