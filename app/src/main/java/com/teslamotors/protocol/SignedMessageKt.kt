// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializesignedMessage")
public inline fun signedMessage(block: com.teslamotors.protocol.SignedMessageKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.SignedMessage =
  com.teslamotors.protocol.SignedMessageKt.Dsl._create(com.teslamotors.protocol.VCSEC.SignedMessage.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.SignedMessage`
 */
public object SignedMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.SignedMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.SignedMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.SignedMessage = _builder.build()

    /**
     * `bytes token = 1;`
     */
    public var token: com.google.protobuf.ByteString
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * `bytes token = 1;`
     */
    public fun clearToken() {
      _builder.clearToken()
    }

    /**
     * `uint32 counter = 6;`
     */
    public var counter: kotlin.Int
      @JvmName("getCounter")
      get() = _builder.getCounter()
      @JvmName("setCounter")
      set(value) {
        _builder.setCounter(value)
      }
    /**
     * `uint32 counter = 6;`
     */
    public fun clearCounter() {
      _builder.clearCounter()
    }

    /**
     * `bytes keyId = 5;`
     */
    public var keyId: com.google.protobuf.ByteString
      @JvmName("getKeyId")
      get() = _builder.getKeyId()
      @JvmName("setKeyId")
      set(value) {
        _builder.setKeyId(value)
      }
    /**
     * `bytes keyId = 5;`
     */
    public fun clearKeyId() {
      _builder.clearKeyId()
    }

    /**
     * `bytes protobufMessageAsBytes = 2;`
     */
    public var protobufMessageAsBytes: com.google.protobuf.ByteString
      @JvmName("getProtobufMessageAsBytes")
      get() = _builder.getProtobufMessageAsBytes()
      @JvmName("setProtobufMessageAsBytes")
      set(value) {
        _builder.setProtobufMessageAsBytes(value)
      }
    /**
     * `bytes protobufMessageAsBytes = 2;`
     */
    public fun clearProtobufMessageAsBytes() {
      _builder.clearProtobufMessageAsBytes()
    }

    /**
     * `.VCSEC.SignatureType signatureType = 3;`
     */
    public var signatureType: com.teslamotors.protocol.VCSEC.SignatureType
      @JvmName("getSignatureType")
      get() = _builder.getSignatureType()
      @JvmName("setSignatureType")
      set(value) {
        _builder.setSignatureType(value)
      }
    public var signatureTypeValue: kotlin.Int
      @JvmName("getSignatureTypeValue")
      get() = _builder.getSignatureTypeValue()
      @JvmName("setSignatureTypeValue")
      set(value) {
        _builder.setSignatureTypeValue(value)
      }
    /**
     * `.VCSEC.SignatureType signatureType = 3;`
     */
    public fun clearSignatureType() {
      _builder.clearSignatureType()
    }

    /**
     * `bytes signature = 4;`
     */
    public var signature: com.google.protobuf.ByteString
      @JvmName("getSignature")
      get() = _builder.getSignature()
      @JvmName("setSignature")
      set(value) {
        _builder.setSignature(value)
      }
    /**
     * `bytes signature = 4;`
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.SignedMessage.copy(block: com.teslamotors.protocol.SignedMessageKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.SignedMessage =
  com.teslamotors.protocol.SignedMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

