// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializetoTPWheelUnitMessage")
public inline fun toTPWheelUnitMessage(block: com.teslamotors.protocol.ToTPWheelUnitMessageKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessage =
  com.teslamotors.protocol.ToTPWheelUnitMessageKt.Dsl._create(com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessage.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.ToTPWheelUnitMessage`
 */
public object ToTPWheelUnitMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessage = _builder.build()

    /**
     * `.VCSEC.UpdaterCommand updaterCommand = 30;`
     */
    public var updaterCommand: com.teslamotors.protocol.VCSEC.UpdaterCommand
      @JvmName("getUpdaterCommand")
      get() = _builder.getUpdaterCommand()
      @JvmName("setUpdaterCommand")
      set(value) {
        _builder.setUpdaterCommand(value)
      }
    /**
     * `.VCSEC.UpdaterCommand updaterCommand = 30;`
     */
    public fun clearUpdaterCommand() {
      _builder.clearUpdaterCommand()
    }
    /**
     * `.VCSEC.UpdaterCommand updaterCommand = 30;`
     * @return Whether the updaterCommand field is set.
     */
    public fun hasUpdaterCommand(): kotlin.Boolean {
      return _builder.hasUpdaterCommand()
    }

    /**
     * `.VCSEC.GenealogyRequest_E genealogyRequest = 31;`
     */
    public var genealogyRequest: com.teslamotors.protocol.VCSEC.GenealogyRequest_E
      @JvmName("getGenealogyRequest")
      get() = _builder.getGenealogyRequest()
      @JvmName("setGenealogyRequest")
      set(value) {
        _builder.setGenealogyRequest(value)
      }
    public var genealogyRequestValue: kotlin.Int
      @JvmName("getGenealogyRequestValue")
      get() = _builder.getGenealogyRequestValue()
      @JvmName("setGenealogyRequestValue")
      set(value) {
        _builder.setGenealogyRequestValue(value)
      }
    /**
     * `.VCSEC.GenealogyRequest_E genealogyRequest = 31;`
     */
    public fun clearGenealogyRequest() {
      _builder.clearGenealogyRequest()
    }
    /**
     * `.VCSEC.GenealogyRequest_E genealogyRequest = 31;`
     * @return Whether the genealogyRequest field is set.
     */
    public fun hasGenealogyRequest(): kotlin.Boolean {
      return _builder.hasGenealogyRequest()
    }

    /**
     * `.VCSEC.SleepManagerRequest sleepManagerRequest = 32;`
     */
    public var sleepManagerRequest: com.teslamotors.protocol.VCSEC.SleepManagerRequest
      @JvmName("getSleepManagerRequest")
      get() = _builder.getSleepManagerRequest()
      @JvmName("setSleepManagerRequest")
      set(value) {
        _builder.setSleepManagerRequest(value)
      }
    /**
     * `.VCSEC.SleepManagerRequest sleepManagerRequest = 32;`
     */
    public fun clearSleepManagerRequest() {
      _builder.clearSleepManagerRequest()
    }
    /**
     * `.VCSEC.SleepManagerRequest sleepManagerRequest = 32;`
     * @return Whether the sleepManagerRequest field is set.
     */
    public fun hasSleepManagerRequest(): kotlin.Boolean {
      return _builder.hasSleepManagerRequest()
    }

    /**
     * `.VCSEC.TPDataRequest_E TPDataRequest = 35;`
     */
    public var tPDataRequest: com.teslamotors.protocol.VCSEC.TPDataRequest_E
      @JvmName("getTPDataRequest")
      get() = _builder.getTPDataRequest()
      @JvmName("setTPDataRequest")
      set(value) {
        _builder.setTPDataRequest(value)
      }
    public var tPDataRequestValue: kotlin.Int
      @JvmName("getTPDataRequestValue")
      get() = _builder.getTPDataRequestValue()
      @JvmName("setTPDataRequestValue")
      set(value) {
        _builder.setTPDataRequestValue(value)
      }
    /**
     * `.VCSEC.TPDataRequest_E TPDataRequest = 35;`
     */
    public fun clearTPDataRequest() {
      _builder.clearTPDataRequest()
    }
    /**
     * `.VCSEC.TPDataRequest_E TPDataRequest = 35;`
     * @return Whether the tPDataRequest field is set.
     */
    public fun hasTPDataRequest(): kotlin.Boolean {
      return _builder.hasTPDataRequest()
    }

    /**
     * `.VCSEC.ResetTrackerCommand_E resetTrackerCommand = 36;`
     */
    public var resetTrackerCommand: com.teslamotors.protocol.VCSEC.ResetTrackerCommand_E
      @JvmName("getResetTrackerCommand")
      get() = _builder.getResetTrackerCommand()
      @JvmName("setResetTrackerCommand")
      set(value) {
        _builder.setResetTrackerCommand(value)
      }
    public var resetTrackerCommandValue: kotlin.Int
      @JvmName("getResetTrackerCommandValue")
      get() = _builder.getResetTrackerCommandValue()
      @JvmName("setResetTrackerCommandValue")
      set(value) {
        _builder.setResetTrackerCommandValue(value)
      }
    /**
     * `.VCSEC.ResetTrackerCommand_E resetTrackerCommand = 36;`
     */
    public fun clearResetTrackerCommand() {
      _builder.clearResetTrackerCommand()
    }
    /**
     * `.VCSEC.ResetTrackerCommand_E resetTrackerCommand = 36;`
     * @return Whether the resetTrackerCommand field is set.
     */
    public fun hasResetTrackerCommand(): kotlin.Boolean {
      return _builder.hasResetTrackerCommand()
    }

    /**
     * `.VCSEC.TPNotifyTrackerCommand_E TPNotifyTrackerCommand = 37;`
     */
    public var tPNotifyTrackerCommand: com.teslamotors.protocol.VCSEC.TPNotifyTrackerCommand_E
      @JvmName("getTPNotifyTrackerCommand")
      get() = _builder.getTPNotifyTrackerCommand()
      @JvmName("setTPNotifyTrackerCommand")
      set(value) {
        _builder.setTPNotifyTrackerCommand(value)
      }
    public var tPNotifyTrackerCommandValue: kotlin.Int
      @JvmName("getTPNotifyTrackerCommandValue")
      get() = _builder.getTPNotifyTrackerCommandValue()
      @JvmName("setTPNotifyTrackerCommandValue")
      set(value) {
        _builder.setTPNotifyTrackerCommandValue(value)
      }
    /**
     * `.VCSEC.TPNotifyTrackerCommand_E TPNotifyTrackerCommand = 37;`
     */
    public fun clearTPNotifyTrackerCommand() {
      _builder.clearTPNotifyTrackerCommand()
    }
    /**
     * `.VCSEC.TPNotifyTrackerCommand_E TPNotifyTrackerCommand = 37;`
     * @return Whether the tPNotifyTrackerCommand field is set.
     */
    public fun hasTPNotifyTrackerCommand(): kotlin.Boolean {
      return _builder.hasTPNotifyTrackerCommand()
    }

    /**
     * `.VCSEC.SetTPConfigration setTPConfiguration = 38;`
     */
    public var setTPConfiguration: com.teslamotors.protocol.VCSEC.SetTPConfigration
      @JvmName("getSetTPConfiguration")
      get() = _builder.getSetTPConfiguration()
      @JvmName("setSetTPConfiguration")
      set(value) {
        _builder.setSetTPConfiguration(value)
      }
    /**
     * `.VCSEC.SetTPConfigration setTPConfiguration = 38;`
     */
    public fun clearSetTPConfiguration() {
      _builder.clearSetTPConfiguration()
    }
    /**
     * `.VCSEC.SetTPConfigration setTPConfiguration = 38;`
     * @return Whether the setTPConfiguration field is set.
     */
    public fun hasSetTPConfiguration(): kotlin.Boolean {
      return _builder.hasSetTPConfiguration()
    }
    public val subMessageCase: com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessage.SubMessageCase
      @JvmName("getSubMessageCase")
      get() = _builder.getSubMessageCase()

    public fun clearSubMessage() {
      _builder.clearSubMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessage.copy(block: com.teslamotors.protocol.ToTPWheelUnitMessageKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessage =
  com.teslamotors.protocol.ToTPWheelUnitMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessageOrBuilder.updaterCommandOrNull: com.teslamotors.protocol.VCSEC.UpdaterCommand?
  get() = if (hasUpdaterCommand()) getUpdaterCommand() else null

public val com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessageOrBuilder.sleepManagerRequestOrNull: com.teslamotors.protocol.VCSEC.SleepManagerRequest?
  get() = if (hasSleepManagerRequest()) getSleepManagerRequest() else null

public val com.teslamotors.protocol.VCSEC.ToTPWheelUnitMessageOrBuilder.setTPConfigurationOrNull: com.teslamotors.protocol.VCSEC.SetTPConfigration?
  get() = if (hasSetTPConfiguration()) getSetTPConfiguration() else null

