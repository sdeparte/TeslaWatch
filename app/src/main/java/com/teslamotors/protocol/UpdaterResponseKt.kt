// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializeupdaterResponse")
public inline fun updaterResponse(block: com.teslamotors.protocol.UpdaterResponseKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.UpdaterResponse =
  com.teslamotors.protocol.UpdaterResponseKt.Dsl._create(com.teslamotors.protocol.VCSEC.UpdaterResponse.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.UpdaterResponse`
 */
public object UpdaterResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.UpdaterResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.UpdaterResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.UpdaterResponse = _builder.build()

    /**
     * `.VCSEC.CodeDescriptor codeDescriptorMessage = 1;`
     */
    public var codeDescriptorMessage: com.teslamotors.protocol.VCSEC.CodeDescriptor
      @JvmName("getCodeDescriptorMessage")
      get() = _builder.getCodeDescriptorMessage()
      @JvmName("setCodeDescriptorMessage")
      set(value) {
        _builder.setCodeDescriptorMessage(value)
      }
    /**
     * `.VCSEC.CodeDescriptor codeDescriptorMessage = 1;`
     */
    public fun clearCodeDescriptorMessage() {
      _builder.clearCodeDescriptorMessage()
    }
    /**
     * `.VCSEC.CodeDescriptor codeDescriptorMessage = 1;`
     * @return Whether the codeDescriptorMessage field is set.
     */
    public fun hasCodeDescriptorMessage(): kotlin.Boolean {
      return _builder.hasCodeDescriptorMessage()
    }

    /**
     * `.VCSEC.UpdaterStatus updaterStatus = 2;`
     */
    public var updaterStatus: com.teslamotors.protocol.VCSEC.UpdaterStatus
      @JvmName("getUpdaterStatus")
      get() = _builder.getUpdaterStatus()
      @JvmName("setUpdaterStatus")
      set(value) {
        _builder.setUpdaterStatus(value)
      }
    /**
     * `.VCSEC.UpdaterStatus updaterStatus = 2;`
     */
    public fun clearUpdaterStatus() {
      _builder.clearUpdaterStatus()
    }
    /**
     * `.VCSEC.UpdaterStatus updaterStatus = 2;`
     * @return Whether the updaterStatus field is set.
     */
    public fun hasUpdaterStatus(): kotlin.Boolean {
      return _builder.hasUpdaterStatus()
    }
    public val subMessageCase: com.teslamotors.protocol.VCSEC.UpdaterResponse.SubMessageCase
      @JvmName("getSubMessageCase")
      get() = _builder.getSubMessageCase()

    public fun clearSubMessage() {
      _builder.clearSubMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.UpdaterResponse.copy(block: com.teslamotors.protocol.UpdaterResponseKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.UpdaterResponse =
  com.teslamotors.protocol.UpdaterResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.teslamotors.protocol.VCSEC.UpdaterResponseOrBuilder.codeDescriptorMessageOrNull: com.teslamotors.protocol.VCSEC.CodeDescriptor?
  get() = if (hasCodeDescriptorMessage()) getCodeDescriptorMessage() else null

public val com.teslamotors.protocol.VCSEC.UpdaterResponseOrBuilder.updaterStatusOrNull: com.teslamotors.protocol.VCSEC.UpdaterStatus?
  get() = if (hasUpdaterStatus()) getUpdaterStatus() else null

