// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializetPLRDetection")
public inline fun tPLRDetection(block: com.teslamotors.protocol.TPLRDetectionKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.TPLRDetection =
  com.teslamotors.protocol.TPLRDetectionKt.Dsl._create(com.teslamotors.protocol.VCSEC.TPLRDetection.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.TPLRDetection`
 */
public object TPLRDetectionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.TPLRDetection.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.TPLRDetection.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.TPLRDetection = _builder.build()

    /**
     * `.VCSEC.LRDetectionResult_E LRDetectionResult = 1;`
     */
    public var lRDetectionResult: com.teslamotors.protocol.VCSEC.LRDetectionResult_E
      @JvmName("getLRDetectionResult")
      get() = _builder.getLRDetectionResult()
      @JvmName("setLRDetectionResult")
      set(value) {
        _builder.setLRDetectionResult(value)
      }
    public var lRDetectionResultValue: kotlin.Int
      @JvmName("getLRDetectionResultValue")
      get() = _builder.getLRDetectionResultValue()
      @JvmName("setLRDetectionResultValue")
      set(value) {
        _builder.setLRDetectionResultValue(value)
      }
    /**
     * `.VCSEC.LRDetectionResult_E LRDetectionResult = 1;`
     */
    public fun clearLRDetectionResult() {
      _builder.clearLRDetectionResult()
    }

    /**
     * `uint32 totalPeriod_ms = 2;`
     */
    public var totalPeriodMs: kotlin.Int
      @JvmName("getTotalPeriodMs")
      get() = _builder.getTotalPeriodMs()
      @JvmName("setTotalPeriodMs")
      set(value) {
        _builder.setTotalPeriodMs(value)
      }
    /**
     * `uint32 totalPeriod_ms = 2;`
     */
    public fun clearTotalPeriodMs() {
      _builder.clearTotalPeriodMs()
    }

    /**
     * `uint32 x90degCnt = 3;`
     */
    public var x90DegCnt: kotlin.Int
      @JvmName("getX90DegCnt")
      get() = _builder.getX90DegCnt()
      @JvmName("setX90DegCnt")
      set(value) {
        _builder.setX90DegCnt(value)
      }
    /**
     * `uint32 x90degCnt = 3;`
     */
    public fun clearX90DegCnt() {
      _builder.clearX90DegCnt()
    }

    /**
     * `uint32 x270degCnt = 4;`
     */
    public var x270DegCnt: kotlin.Int
      @JvmName("getX270DegCnt")
      get() = _builder.getX270DegCnt()
      @JvmName("setX270DegCnt")
      set(value) {
        _builder.setX270DegCnt(value)
      }
    /**
     * `uint32 x270degCnt = 4;`
     */
    public fun clearX270DegCnt() {
      _builder.clearX270DegCnt()
    }

    /**
     * `sint32 zAcceleration_dg = 5;`
     */
    public var zAccelerationDg: kotlin.Int
      @JvmName("getZAccelerationDg")
      get() = _builder.getZAccelerationDg()
      @JvmName("setZAccelerationDg")
      set(value) {
        _builder.setZAccelerationDg(value)
      }
    /**
     * `sint32 zAcceleration_dg = 5;`
     */
    public fun clearZAccelerationDg() {
      _builder.clearZAccelerationDg()
    }

    /**
     * `uint32 zAccelDiffCnt = 6;`
     */
    public var zAccelDiffCnt: kotlin.Int
      @JvmName("getZAccelDiffCnt")
      get() = _builder.getZAccelDiffCnt()
      @JvmName("setZAccelDiffCnt")
      set(value) {
        _builder.setZAccelDiffCnt(value)
      }
    /**
     * `uint32 zAccelDiffCnt = 6;`
     */
    public fun clearZAccelDiffCnt() {
      _builder.clearZAccelDiffCnt()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.TPLRDetection.copy(block: com.teslamotors.protocol.TPLRDetectionKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.TPLRDetection =
  com.teslamotors.protocol.TPLRDetectionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

