// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializenFCSEState")
public inline fun nFCSEState(block: com.teslamotors.protocol.NFCSEStateKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.NFCSEState =
  com.teslamotors.protocol.NFCSEStateKt.Dsl._create(com.teslamotors.protocol.VCSEC.NFCSEState.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.NFCSEState`
 */
public object NFCSEStateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.NFCSEState.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.NFCSEState.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.NFCSEState = _builder.build()

    /**
     * `.VCSEC.NFCSEDevicePubKeyState_E devicePubKeyState = 1;`
     */
    public var devicePubKeyState: com.teslamotors.protocol.VCSEC.NFCSEDevicePubKeyState_E
      @JvmName("getDevicePubKeyState")
      get() = _builder.getDevicePubKeyState()
      @JvmName("setDevicePubKeyState")
      set(value) {
        _builder.setDevicePubKeyState(value)
      }
    public var devicePubKeyStateValue: kotlin.Int
      @JvmName("getDevicePubKeyStateValue")
      get() = _builder.getDevicePubKeyStateValue()
      @JvmName("setDevicePubKeyStateValue")
      set(value) {
        _builder.setDevicePubKeyStateValue(value)
      }
    /**
     * `.VCSEC.NFCSEDevicePubKeyState_E devicePubKeyState = 1;`
     */
    public fun clearDevicePubKeyState() {
      _builder.clearDevicePubKeyState()
    }

    /**
     * `.VCSEC.NFCSEVehiclePubKeyState_E vehiclePubKeyState = 2;`
     */
    public var vehiclePubKeyState: com.teslamotors.protocol.VCSEC.NFCSEVehiclePubKeyState_E
      @JvmName("getVehiclePubKeyState")
      get() = _builder.getVehiclePubKeyState()
      @JvmName("setVehiclePubKeyState")
      set(value) {
        _builder.setVehiclePubKeyState(value)
      }
    public var vehiclePubKeyStateValue: kotlin.Int
      @JvmName("getVehiclePubKeyStateValue")
      get() = _builder.getVehiclePubKeyStateValue()
      @JvmName("setVehiclePubKeyStateValue")
      set(value) {
        _builder.setVehiclePubKeyStateValue(value)
      }
    /**
     * `.VCSEC.NFCSEVehiclePubKeyState_E vehiclePubKeyState = 2;`
     */
    public fun clearVehiclePubKeyState() {
      _builder.clearVehiclePubKeyState()
    }

    /**
     * `.VCSEC.NFCSESharedSecretState_E sharedSecretState = 3;`
     */
    public var sharedSecretState: com.teslamotors.protocol.VCSEC.NFCSESharedSecretState_E
      @JvmName("getSharedSecretState")
      get() = _builder.getSharedSecretState()
      @JvmName("setSharedSecretState")
      set(value) {
        _builder.setSharedSecretState(value)
      }
    public var sharedSecretStateValue: kotlin.Int
      @JvmName("getSharedSecretStateValue")
      get() = _builder.getSharedSecretStateValue()
      @JvmName("setSharedSecretStateValue")
      set(value) {
        _builder.setSharedSecretStateValue(value)
      }
    /**
     * `.VCSEC.NFCSESharedSecretState_E sharedSecretState = 3;`
     */
    public fun clearSharedSecretState() {
      _builder.clearSharedSecretState()
    }

    /**
     * `.VCSEC.NFCSEInsecureCommandState_E insecureCommandState = 4;`
     */
    public var insecureCommandState: com.teslamotors.protocol.VCSEC.NFCSEInsecureCommandState_E
      @JvmName("getInsecureCommandState")
      get() = _builder.getInsecureCommandState()
      @JvmName("setInsecureCommandState")
      set(value) {
        _builder.setInsecureCommandState(value)
      }
    public var insecureCommandStateValue: kotlin.Int
      @JvmName("getInsecureCommandStateValue")
      get() = _builder.getInsecureCommandStateValue()
      @JvmName("setInsecureCommandStateValue")
      set(value) {
        _builder.setInsecureCommandStateValue(value)
      }
    /**
     * `.VCSEC.NFCSEInsecureCommandState_E insecureCommandState = 4;`
     */
    public fun clearInsecureCommandState() {
      _builder.clearInsecureCommandState()
    }

    /**
     * `.VCSEC.PublicKey vehiclePubKey = 5;`
     */
    public var vehiclePubKey: com.teslamotors.protocol.VCSEC.PublicKey
      @JvmName("getVehiclePubKey")
      get() = _builder.getVehiclePubKey()
      @JvmName("setVehiclePubKey")
      set(value) {
        _builder.setVehiclePubKey(value)
      }
    /**
     * `.VCSEC.PublicKey vehiclePubKey = 5;`
     */
    public fun clearVehiclePubKey() {
      _builder.clearVehiclePubKey()
    }
    /**
     * `.VCSEC.PublicKey vehiclePubKey = 5;`
     * @return Whether the vehiclePubKey field is set.
     */
    public fun hasVehiclePubKey(): kotlin.Boolean {
      return _builder.hasVehiclePubKey()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.NFCSEState.copy(block: com.teslamotors.protocol.NFCSEStateKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.NFCSEState =
  com.teslamotors.protocol.NFCSEStateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.teslamotors.protocol.VCSEC.NFCSEStateOrBuilder.vehiclePubKeyOrNull: com.teslamotors.protocol.VCSEC.PublicKey?
  get() = if (hasVehiclePubKey()) getVehiclePubKey() else null

