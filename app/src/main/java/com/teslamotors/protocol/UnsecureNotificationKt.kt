// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializeunsecureNotification")
public inline fun unsecureNotification(block: com.teslamotors.protocol.UnsecureNotificationKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.UnsecureNotification =
  com.teslamotors.protocol.UnsecureNotificationKt.Dsl._create(com.teslamotors.protocol.VCSEC.UnsecureNotification.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.UnsecureNotification`
 */
public object UnsecureNotificationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.UnsecureNotification.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.UnsecureNotification.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.UnsecureNotification = _builder.build()

    /**
     * `bool notifyUser = 1;`
     */
    public var notifyUser: kotlin.Boolean
      @JvmName("getNotifyUser")
      get() = _builder.getNotifyUser()
      @JvmName("setNotifyUser")
      set(value) {
        _builder.setNotifyUser(value)
      }
    /**
     * `bool notifyUser = 1;`
     */
    public fun clearNotifyUser() {
      _builder.clearNotifyUser()
    }

    /**
     * `.VCSEC.ClosureStatuses closureStatuses = 2;`
     */
    public var closureStatuses: com.teslamotors.protocol.VCSEC.ClosureStatuses
      @JvmName("getClosureStatuses")
      get() = _builder.getClosureStatuses()
      @JvmName("setClosureStatuses")
      set(value) {
        _builder.setClosureStatuses(value)
      }
    /**
     * `.VCSEC.ClosureStatuses closureStatuses = 2;`
     */
    public fun clearClosureStatuses() {
      _builder.clearClosureStatuses()
    }
    /**
     * `.VCSEC.ClosureStatuses closureStatuses = 2;`
     * @return Whether the closureStatuses field is set.
     */
    public fun hasClosureStatuses(): kotlin.Boolean {
      return _builder.hasClosureStatuses()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.UnsecureNotification.copy(block: com.teslamotors.protocol.UnsecureNotificationKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.UnsecureNotification =
  com.teslamotors.protocol.UnsecureNotificationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.teslamotors.protocol.VCSEC.UnsecureNotificationOrBuilder.closureStatusesOrNull: com.teslamotors.protocol.VCSEC.ClosureStatuses?
  get() = if (hasClosureStatuses()) getClosureStatuses() else null

