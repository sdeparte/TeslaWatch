// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: proto/VCSECv3.10.14.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.teslamotors.protocol;

@kotlin.jvm.JvmName("-initializetPStationaryConfig")
public inline fun tPStationaryConfig(block: com.teslamotors.protocol.TPStationaryConfigKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.TPStationaryConfig =
  com.teslamotors.protocol.TPStationaryConfigKt.Dsl._create(com.teslamotors.protocol.VCSEC.TPStationaryConfig.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `VCSEC.TPStationaryConfig`
 */
public object TPStationaryConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.teslamotors.protocol.VCSEC.TPStationaryConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.teslamotors.protocol.VCSEC.TPStationaryConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.teslamotors.protocol.VCSEC.TPStationaryConfig = _builder.build()

    /**
     * `uint32 lowPressureThreshold = 1;`
     */
    public var lowPressureThreshold: kotlin.Int
      @JvmName("getLowPressureThreshold")
      get() = _builder.getLowPressureThreshold()
      @JvmName("setLowPressureThreshold")
      set(value) {
        _builder.setLowPressureThreshold(value)
      }
    /**
     * `uint32 lowPressureThreshold = 1;`
     */
    public fun clearLowPressureThreshold() {
      _builder.clearLowPressureThreshold()
    }

    /**
     * `uint32 pressureDelta = 2;`
     */
    public var pressureDelta: kotlin.Int
      @JvmName("getPressureDelta")
      get() = _builder.getPressureDelta()
      @JvmName("setPressureDelta")
      set(value) {
        _builder.setPressureDelta(value)
      }
    /**
     * `uint32 pressureDelta = 2;`
     */
    public fun clearPressureDelta() {
      _builder.clearPressureDelta()
    }

    /**
     * `.VCSEC.MLXWakePeriod_E accelMeasurePeriod = 3;`
     */
    public var accelMeasurePeriod: com.teslamotors.protocol.VCSEC.MLXWakePeriod_E
      @JvmName("getAccelMeasurePeriod")
      get() = _builder.getAccelMeasurePeriod()
      @JvmName("setAccelMeasurePeriod")
      set(value) {
        _builder.setAccelMeasurePeriod(value)
      }
    public var accelMeasurePeriodValue: kotlin.Int
      @JvmName("getAccelMeasurePeriodValue")
      get() = _builder.getAccelMeasurePeriodValue()
      @JvmName("setAccelMeasurePeriodValue")
      set(value) {
        _builder.setAccelMeasurePeriodValue(value)
      }
    /**
     * `.VCSEC.MLXWakePeriod_E accelMeasurePeriod = 3;`
     */
    public fun clearAccelMeasurePeriod() {
      _builder.clearAccelMeasurePeriod()
    }

    /**
     * `int32 absoluteAccelWakeThreshold = 4;`
     */
    public var absoluteAccelWakeThreshold: kotlin.Int
      @JvmName("getAbsoluteAccelWakeThreshold")
      get() = _builder.getAbsoluteAccelWakeThreshold()
      @JvmName("setAbsoluteAccelWakeThreshold")
      set(value) {
        _builder.setAbsoluteAccelWakeThreshold(value)
      }
    /**
     * `int32 absoluteAccelWakeThreshold = 4;`
     */
    public fun clearAbsoluteAccelWakeThreshold() {
      _builder.clearAbsoluteAccelWakeThreshold()
    }

    /**
     * `uint32 PTMeasureMod = 5;`
     */
    public var pTMeasureMod: kotlin.Int
      @JvmName("getPTMeasureMod")
      get() = _builder.getPTMeasureMod()
      @JvmName("setPTMeasureMod")
      set(value) {
        _builder.setPTMeasureMod(value)
      }
    /**
     * `uint32 PTMeasureMod = 5;`
     */
    public fun clearPTMeasureMod() {
      _builder.clearPTMeasureMod()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.teslamotors.protocol.VCSEC.TPStationaryConfig.copy(block: com.teslamotors.protocol.TPStationaryConfigKt.Dsl.() -> kotlin.Unit): com.teslamotors.protocol.VCSEC.TPStationaryConfig =
  com.teslamotors.protocol.TPStationaryConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

